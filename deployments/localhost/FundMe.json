{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x0338a25de5bcaec8f2bf3cf0ef157652a961a42252b84eafcccaca3f0789ae06",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1050685",
        "logsBloom": "0x
        "blockHash": "0x9aed2c0f2f283d33fda3962200d499156856a6dd70eb2c9702801b0c88947f19",
        "transactionHash": "0x0338a25de5bcaec8f2bf3cf0ef157652a961a42252b84eafcccaca3f0789ae06",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1050685",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "66d9c42ee7722d72d4b156fd704dd1f9",
    "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Chirag Patil\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConvertor.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @author Chirag Patil\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConvertor for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 10e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // Functions Order:\\n    ////constructor\\n    ////receive\\n    ////fallback\\n    ////external\\n    ////public\\n    ////internal\\n    ////private\\n    ////pure/view\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /// @notice Funds our contract based on the ETH/USD price\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Did not send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the funders array\\n        s_funders = new address[](0);\\n\\n        // actually withdraw the funds\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            s_addressToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n\\n        // reset the funders array\\n        s_funders = new address[](0);\\n\\n        // actually withdraw the funds\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xaf45c7b303959f75f6c719a54b0bf08f7b3343ecfbfb8ec2a73fc76a18a6bbb5\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountIndUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountIndUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x737bb30e0f4f8c634c92ec5d791465bc1b80f2abb5ce7cebd7d1a9170545171c\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200132e3803806200132e83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516111a76200018760003960008181610337015281816104ca015281816105a6015281816105f601526107e601526111a76000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610adf565b6102ec565b6040516100cc9190610b25565b60405180910390f35b6100dd610335565b005b3480156100eb57600080fd5b506100f4610595565b6040516101019190610b25565b60405180910390f35b34801561011657600080fd5b5061011f6105a2565b60405161012c9190610b4f565b60405180910390f35b34801561014157600080fd5b5061014a6105ca565b6040516101579190610bc9565b60405180910390f35b6101686101b1565b005b6101726105f4565b005b34801561018057600080fd5b5061019b60048036038101906101969190610c10565b6108b2565b6040516101a89190610b4f565b60405180910390f35b681b1ae4d6e2ef5000006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108f990919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c9a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e39190610ce9565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104655760008082815481106103df576103de610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045d90610d6e565b9150506103bd565b50600067ffffffffffffffff81111561048157610480610db7565b5b6040519080825280602002602001820160405280156104af5781602001602082028036833780820191505090505b50600090805190602001906104c59291906109d5565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161050c90610e17565b60006040518083038185875af1925050503d8060008114610549576040519150601f19603f3d011682016040523d82523d6000602084013e61054e565b606091505b5050905080610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610e78565b60405180910390fd5b50565b681b1ae4d6e2ef50000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610679576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106fc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b2575b5050505050905060005b81518110156107815760006001600084848151811061072857610727610d3f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061077990610d6e565b915050610706565b50600067ffffffffffffffff81111561079d5761079c610db7565b5b6040519080825280602002602001820160405280156107cb5781602001602082028036833780820191505090505b50600090805190602001906107e19291906109d5565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082890610e17565b60006040518083038185875af1925050503d8060008114610865576040519150601f19603f3d011682016040523d82523d6000602084013e61086a565b606091505b50509050806108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590610e78565b60405180910390fd5b5050565b60008082815481106108c7576108c6610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061090583610935565b90506000670de0b6b3a7640000858361091e9190610e98565b6109289190610f21565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097e57600080fd5b505afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fdf565b5050509150506402540be400816109cd919061105a565b915050919050565b828054828255906000526020600020908101928215610a4e579160200282015b82811115610a4d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109f5565b5b509050610a5b9190610a5f565b5090565b5b80821115610a78576000816000905550600101610a60565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aac82610a81565b9050919050565b610abc81610aa1565b8114610ac757600080fd5b50565b600081359050610ad981610ab3565b92915050565b600060208284031215610af557610af4610a7c565b5b6000610b0384828501610aca565b91505092915050565b6000819050919050565b610b1f81610b0c565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b610b4981610aa1565b82525050565b6000602082019050610b646000830184610b40565b92915050565b6000819050919050565b6000610b8f610b8a610b8584610a81565b610b6a565b610a81565b9050919050565b6000610ba182610b74565b9050919050565b6000610bb382610b96565b9050919050565b610bc381610ba8565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b610bed81610b0c565b8114610bf857600080fd5b50565b600081359050610c0a81610be4565b92915050565b600060208284031215610c2657610c25610a7c565b5b6000610c3484828501610bfb565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676821000000000000000000000000600082015250565b6000610c84601483610c3d565b9150610c8f82610c4e565b602082019050919050565b60006020820190508181036000830152610cb381610c77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf482610b0c565b9150610cff83610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3457610d33610cba565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7982610b0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dac57610dab610cba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e01600083610de6565b9150610e0c82610df1565b600082019050919050565b6000610e2282610df4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e62600b83610c3d565b9150610e6d82610e2c565b602082019050919050565b60006020820190508181036000830152610e9181610e55565b9050919050565b6000610ea382610b0c565b9150610eae83610b0c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee757610ee6610cba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2c82610b0c565b9150610f3783610b0c565b925082610f4757610f46610ef2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7181610f52565b8114610f7c57600080fd5b50565b600081519050610f8e81610f68565b92915050565b6000819050919050565b610fa781610f94565b8114610fb257600080fd5b50565b600081519050610fc481610f9e565b92915050565b600081519050610fd981610be4565b92915050565b600080600080600060a08688031215610ffb57610ffa610a7c565b5b600061100988828901610f7f565b955050602061101a88828901610fb5565b945050604061102b88828901610fca565b935050606061103c88828901610fca565b925050608061104d88828901610f7f565b9150509295509295909350565b600061106582610f94565b915061107083610f94565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110af576110ae610cba565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ec576110eb610cba565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112957611128610cba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116657611165610cba565b5b82820290509291505056fea264697066735822122012810116e47efb4801856e6a01fc002cbf872681cbd3f19c159f641a0589f53864736f6c63430008090033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610adf565b6102ec565b6040516100cc9190610b25565b60405180910390f35b6100dd610335565b005b3480156100eb57600080fd5b506100f4610595565b6040516101019190610b25565b60405180910390f35b34801561011657600080fd5b5061011f6105a2565b60405161012c9190610b4f565b60405180910390f35b34801561014157600080fd5b5061014a6105ca565b6040516101579190610bc9565b60405180910390f35b6101686101b1565b005b6101726105f4565b005b34801561018057600080fd5b5061019b60048036038101906101969190610c10565b6108b2565b6040516101a89190610b4f565b60405180910390f35b681b1ae4d6e2ef5000006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108f990919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c9a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e39190610ce9565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104655760008082815481106103df576103de610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045d90610d6e565b9150506103bd565b50600067ffffffffffffffff81111561048157610480610db7565b5b6040519080825280602002602001820160405280156104af5781602001602082028036833780820191505090505b50600090805190602001906104c59291906109d5565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161050c90610e17565b60006040518083038185875af1925050503d8060008114610549576040519150601f19603f3d011682016040523d82523d6000602084013e61054e565b606091505b5050905080610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610e78565b60405180910390fd5b50565b681b1ae4d6e2ef50000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610679576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106fc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b2575b5050505050905060005b81518110156107815760006001600084848151811061072857610727610d3f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061077990610d6e565b915050610706565b50600067ffffffffffffffff81111561079d5761079c610db7565b5b6040519080825280602002602001820160405280156107cb5781602001602082028036833780820191505090505b50600090805190602001906107e19291906109d5565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082890610e17565b60006040518083038185875af1925050503d8060008114610865576040519150601f19603f3d011682016040523d82523d6000602084013e61086a565b606091505b50509050806108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590610e78565b60405180910390fd5b5050565b60008082815481106108c7576108c6610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061090583610935565b90506000670de0b6b3a7640000858361091e9190610e98565b6109289190610f21565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097e57600080fd5b505afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fdf565b5050509150506402540be400816109cd919061105a565b915050919050565b828054828255906000526020600020908101928215610a4e579160200282015b82811115610a4d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109f5565b5b509050610a5b9190610a5f565b5090565b5b80821115610a78576000816000905550600101610a60565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aac82610a81565b9050919050565b610abc81610aa1565b8114610ac757600080fd5b50565b600081359050610ad981610ab3565b92915050565b600060208284031215610af557610af4610a7c565b5b6000610b0384828501610aca565b91505092915050565b6000819050919050565b610b1f81610b0c565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b610b4981610aa1565b82525050565b6000602082019050610b646000830184610b40565b92915050565b6000819050919050565b6000610b8f610b8a610b8584610a81565b610b6a565b610a81565b9050919050565b6000610ba182610b74565b9050919050565b6000610bb382610b96565b9050919050565b610bc381610ba8565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b610bed81610b0c565b8114610bf857600080fd5b50565b600081359050610c0a81610be4565b92915050565b600060208284031215610c2657610c25610a7c565b5b6000610c3484828501610bfb565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676821000000000000000000000000600082015250565b6000610c84601483610c3d565b9150610c8f82610c4e565b602082019050919050565b60006020820190508181036000830152610cb381610c77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf482610b0c565b9150610cff83610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3457610d33610cba565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7982610b0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dac57610dab610cba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e01600083610de6565b9150610e0c82610df1565b600082019050919050565b6000610e2282610df4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e62600b83610c3d565b9150610e6d82610e2c565b602082019050919050565b60006020820190508181036000830152610e9181610e55565b9050919050565b6000610ea382610b0c565b9150610eae83610b0c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee757610ee6610cba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2c82610b0c565b9150610f3783610b0c565b925082610f4757610f46610ef2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7181610f52565b8114610f7c57600080fd5b50565b600081519050610f8e81610f68565b92915050565b6000819050919050565b610fa781610f94565b8114610fb257600080fd5b50565b600081519050610fc481610f9e565b92915050565b600081519050610fd981610be4565b92915050565b600080600080600060a08688031215610ffb57610ffa610a7c565b5b600061100988828901610f7f565b955050602061101a88828901610fb5565b945050604061102b88828901610fca565b935050606061103c88828901610fca565b925050608061104d88828901610f7f565b9150509295509295909350565b600061106582610f94565b915061107083610f94565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110af576110ae610cba565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ec576110eb610cba565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112957611128610cba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116657611165610cba565b5b82820290509291505056fea264697066735822122012810116e47efb4801856e6a01fc002cbf872681cbd3f19c159f641a0589f53864736f6c63430008090033",
    "devdoc": {
        "author": "Chirag Patil",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A sample Funding Contract",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "Funds our contract based on the ETH/USD price"
            }
        },
        "notice": "This contract is for creating a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 66,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
